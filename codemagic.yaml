workflows:
  expo_workflow:
    name: Expo Workflow
    max_build_duration: 60
    environment:
      vars:
        EXPO_TOKEN: "-yOXhrRGGMdpm8XbR_UR1NbZdppU44Fdm4-PsOGz"  # Il tuo token Expo
        EXPO_DOCTOR_ENABLE_DIRECTORY_CHECK: "false"  # Disabilita i controlli problematici
      node: "16.x"  # Node.js 16 per garantire compatibilit√† con fetch
    scripts:
      # Installa Expo CLI e EAS CLI
      - echo "Installazione degli strumenti..."
      - npm install -g expo-cli eas-cli  # Installa Expo CLI ed EAS CLI
      - npm install --legacy-peer-deps  # Risolvi eventuali conflitti di dipendenze
      - npm install  # Installa tutte le dipendenze definite in package.json

      # Sincronizza le dipendenze con Expo SDK
      - echo "Sincronizzazione delle dipendenze..."
      - npx expo install --check  # Controlla e sincronizza le dipendenze
      - expo install expo-camera  # Aggiorna expo-camera alla versione corretta

      # Verifica configurazione del progetto
      - echo "Verificando configurazione..."
      - expo --version  # Controlla la versione di Expo CLI
      - npx react-native --version  # Controlla la versione di React Native

      # Pulisci la cache di Metro
      - echo "Pulizia della cache..."
      - expo start -c  # Pulisci la cache di Metro (opzionale)

      # Esegui la build con EAS
      - echo "Eseguendo la build..."
      - eas build --platform android --non-interactive --no-publish  # Crea la build per Android

    artifacts:
      - build/  # Specifica dove trovare i file di output (APK/AAB)

